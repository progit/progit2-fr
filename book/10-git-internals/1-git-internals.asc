[[_git_internals]]
== Les tripes de Git

Vous êtes peut-être arrivé à ce chapitre en en sautant certains ou après avoir parcouru tout le reste du livre.
Dans tous les cas, c'est ici que l'on parle du fonctionnement interne et de la mise en œuvre de Git.
Pour nous, leur apprentissage a été fondamental pour comprendre à quel point Git est utile et puissant,
mais d'autres soutiennent que cela peut être source de confusion et être trop complexe pour les débutants.
Nous en avons donc fait le dernier chapitre de ce livre pour que vous puissiez le lire tôt ou tard lors de votre apprentissage.
Nous vous laissons le choix.

Maintenant que vous êtes ici, commençons.
Tout d'abord et même si ce n'est pas clair tout de suite, Git est fondamentalement un système de fichiers adressables par contenu (*content-addressable filesystem*) avec l'interface utilisateur d'un VCS au-dessus.
Vous en apprendrez plus à ce sujet dans quelques instants.

Aux premiers jours de Git (surtout avant la version 1.5), l'interface utilisateur était beaucoup plus complexe, car elle était centrée sur le système de fichier plutôt que sur l'aspect VCS.
Ces dernières années, l'interface utilisateur a été peaufinée jusqu'à devenir aussi cohérente et facile à utiliser que n'importe quel autre système.
Pour beaucoup, l'image du Git des débuts avec son interface utilisateur complexe et difficile à apprendre est toujours présente.

La couche système de fichiers adressables par contenu est vraiment géniale et nous l'aborderons dans ce chapitre.
Ensuite, vous apprendrez les mécanismes de $$transport/transmission/communication ainsi que les tâches que vous serez amené à accomplir pour maintenir un dépôt.

include::sections/plumbing-porcelain.asc[]

include::sections/objects.asc[]

include::sections/refs.asc[]

include::sections/packfiles.asc[]

include::sections/refspec.asc[]

include::sections/transfer-protocols.asc[]

include::sections/maintenance.asc[]

include::sections/environment.asc[]

=== Résumé

Vous devriez avoir une assez bonne compréhension de ce que Git fait en arrière-plan et, jusqu'à un certain niveau, comment il est implémenté.
Ce chapitre a parcouru plusieurs commandes de plomberie, qui sont à un niveau plus bas et plus simple que les commandes de porcelaine que vous avez vues dans le reste du livre.
Comprendre comment Git travaille à bas niveau devrait vous aider à comprendre pourquoi il fait ce qu'il fait et à créer vos propres outils et scripts pour vous permettre de travailler comme vous l'entendez.

Git, en tant que système de fichiers adressables$$ par contenu, est un outil puissant que vous pouvez utiliser pour des fonctionnalités au-delà d'un VCS.
Nous espérons que vous pourrez utiliser votre connaissance nouvellement acquise des tripes de Git pour implémenter votre propre super application avec cette technologie et que vous vous sentirez plus à l'aise pour utiliser Git de manière plus poussée.
